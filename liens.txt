Exploring how computers work:
        https://youtube.com/playlist?list=PLFt_AvWsXl0dPhqVsKt1Ni_46ARyiCGSq&si=qlKNkUKPXxHM2cNZ
        https://www.nand2tetris.org/
	https://fr.wikipedia.org/wiki/Alg%C3%A8bre_de_Boole_(logique)
	https://fr.wikipedia.org/wiki/Lois_de_De_Morgan


Gnu-Linux
	https://en.wikipedia.org/wiki/Unix-like
	https://en.wikipedia.org/wiki/Linux_kernel
	https://en.wikipedia.org/wiki/History_of_Linux
	https://youtu.be/o8NPllzkFhE?si=wgWaq1t3nQJGzE9c

        https://www.gnu.org/
        https://docs.kernel.org/
	https://gnome.org/https://guide.ubuntu-fr.org/
	https://apps.gnome.org/


Cours avec exercices
	https://linuxjourney.com/
	https://openclassrooms.com/fr/courses/7170491-initiez-vous-a-linux
	https://openclassrooms.com/fr/courses/7274161-administrez-un-systeme-linux
	https://openclassrooms.com/fr/courses/1733551-gerez-votre-serveur-linux-et-ses-services
	https://openclassrooms.com/fr/courses/2356316-montez-un-serveur-de-fichiers-sous-linux


Ubuntu
	https://ubuntu.com/
	https://help.ubuntu.com/
	https://manpages.ubuntu.com/
	https://ubuntu.com/server/docs/
	https://guide.ubuntu-fr.org/


Ubuntu - Tutoriels
	https://doc.ubuntu-fr.org/tutoriel/amorcer_sur_cd_ubuntu
	https://doc.ubuntu-fr.org/tutoriel/installer_ubuntu_avec_le_live_cd
	https://doc.ubuntu-fr.org/tutoriel/completer_installation_ubuntu
	https://doc.ubuntu-fr.org/reflexe_ubunteros
	https://doc.ubuntu-fr.org/tutoriel/learn_unix_in_10_minutes

	https://doc.ubuntu-fr.org/projets/ecole/scripting/initiation_au_shell
	https://doc.ubuntu-fr.org/tutoriel/console_ligne_de_commande
	https://doc.ubuntu-fr.org/tutoriel/console_commandes_de_base
	https://doc.ubuntu-fr.org/tutoriel/comment_modifier_un_fichier
	https://doc.ubuntu-fr.org/tutoriel/comment_sauver_et_restaurer_un_fichier
	https://doc.ubuntu-fr.org/tutoriel/gestion_utilisateurs_et_groupes_en_ligne_de_commande
	https://doc.ubuntu-fr.org/tutoriel/effectuer_des_taches_en_super_utilisateur

	https://doc.ubuntu-fr.org/tutoriel/tout_savoir_sur_les_modules_linux
	https://doc.ubuntu-fr.org/tutoriel/donnees_stockees_dans_un_systeme_de_fichiers_zfs
	https://doc.ubuntu-fr.org/tutoriel/reverse_ssh


Ubuntu - Documentations
	https://www.ubuntu-fr.org/download/
        https://doc.ubuntu-fr.org/installation
        https://doc.ubuntu-fr.org/cohabitation_ubuntu_windows

	https://doc.ubuntu-fr.org/console
	https://doc.ubuntu-fr.org/terminal
	https://doc.ubuntu-fr.org/commande_shell
	https://doc.ubuntu-fr.org/editeur_de_texte
	https://doc.ubuntu-fr.org/vim
	https://doc.ubuntu-fr.org/ide
	https://doc.ubuntu-fr.org/visual_studio_code

	https://doc.ubuntu-fr.org/systeme
	https://doc.ubuntu-fr.org/utilisateur
	https://doc.ubuntu-fr.org/utilisateurs_et_groupes
	https://doc.ubuntu-fr.org/droits
	https://doc.ubuntu-fr.org/permissions
	https://doc.ubuntu-fr.org/users-admin
	https://doc.ubuntu-fr.org/sudo
	https://doc.ubuntu-fr.org/sudoers
	https://doc.ubuntu-fr.org/variables_d_environnement

	https://doc.ubuntu-fr.org/apt
	https://doc.ubuntu-fr.org/apt-get
	https://doc.ubuntu-fr.org/apt-cli
	https://doc.ubuntu-fr.org/gestionnaire_de_mises_a_jour
        https://doc.ubuntu-fr.org/nettoyer_ubuntu

	https://doc.ubuntu-fr.org/services
	https://doc.ubuntu-fr.org/systemd
	https://doc.ubuntu-fr.org/creer_un_service_avec_systemd
	https://doc.ubuntu-fr.org/logrotate
	https://doc.ubuntu-fr.org/cron
	https://doc.ubuntu-fr.org/mount_fstab
	https://doc.ubuntu-fr.org/mounter_un_disque_avec_systemd.automount

	https://doc.ubuntu-fr.org/securite
	https://doc.ubuntu-fr.org/diagnostic_outil
	https://doc.ubuntu-fr.org/ufw
	https://doc.ubuntu-fr.org/gnupg
	https://doc.ubuntu-fr.org/network-manager
        https://doc.ubuntu-fr.org/ssh
        https://doc.ubuntu-fr.org/configurer_mail


Windows Linux Server
        https://learn.microsoft.com/fr-fr/windows/wsl/
        https://youtu.be/lwhMThePdIo?si=xnFOB-pTSb8m2h06

	https://learn.microsoft.com/fr-fr/windows/wsl/filesystems
	https://learn.microsoft.com/fr-fr/windows/wsl/tutorials/linux
	https://learn.microsoft.com/fr-fr/windows/wsl/tutorials/wsl-git
	https://learn.microsoft.com/fr-fr/windows/wsl/tutorials/gui-apps

	https://learn.microsoft.com/fr-fr/training/modules/bash-introduction


Utils:
	https://markdownlivepreview.com/
	https://regex101.com/


CS50 (Intro Computer Sciences):
	https://www.edx.org/cs50
	https://cs50.harvard.edu/x/2025/
	https://cs50.harvard.edu/x/2025/psets/
        https://youtu.be/h6lqxDwUmJQ?si=pxKcU3PazvHqCaC_


Visual Debugger:
	https://pythontutor.com/


Syscall table
        https://chromium.googlesource.com/chromiumos/docs/+/master/constants/syscalls.md


Dev:
	L'IA n'existe pas (Luc Julia) https://youtu.be/yuDBSbng_8o?si=0olR7cCnEohElaeB
	https://www.youtube.com/@CodeAesthetic
	https://peps.python.org/pep-0008/
	Oncle Bob :
		Clean code
		Clean architecture 
		https://blog.cleancoder.com/
		https://fr.wikipedihttps://www.mozilla.org/fr/a.org/wiki/UML_(informatique)
		https://en.wikipedia.org/wiki/Software_design_pattern


Web:
	https://www.mozilla.org/fr/
	https://developer.mozilla.org/fr/


3 hardest things in CS:
	- Naming things
	- Cache invalidation
	- N+1 errors


Zen of python
Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!
